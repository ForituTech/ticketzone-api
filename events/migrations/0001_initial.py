# Generated by Django 4.0.3 on 2022-03-19 19:39

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("partner", "0002_rename_start_on_partnerpromotion_starts_on"),
        ("payments", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                ("name", models.CharField(default="new-event", max_length=256)),
                ("poster", models.ImageField(upload_to="media/")),
                ("event_date", models.DateField()),
                ("event_location", models.CharField(max_length=1024)),
                ("description", models.CharField(max_length=1024)),
                ("time", models.TimeField(auto_now_add=True)),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, verbose_name="Has the event been published"
                    ),
                ),
                (
                    "event_state",
                    models.CharField(
                        choices=[
                            ("PR", "PRE_REVIEW"),
                            ("AE", "ACTIVE"),
                            ("PC", "PRE_CLOSED"),
                            ("CD", "CLOSED"),
                            ("AD", "ARCHIVED"),
                        ],
                        default="PR",
                        max_length=256,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EventCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TicketType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                ("name", models.CharField(max_length=256)),
                ("price", models.IntegerField()),
                ("active", models.BooleanField(default=True)),
                (
                    "amsg",
                    models.CharField(
                        default="Open Soon",
                        max_length=256,
                        verbose_name="Active Message",
                    ),
                ),
                ("amount", models.IntegerField(default=100)),
                (
                    "is_visible",
                    models.BooleanField(
                        default=False, verbose_name="Is Ticket Visible To Users"
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="events.event"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TicketPromotion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                ("name", models.CharField(max_length=256)),
                ("promotion_rate", models.FloatField(default=10.0)),
                ("expiry", models.DateField()),
                ("use_limit", models.IntegerField(default=100)),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.tickettype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                (
                    "sent",
                    models.BooleanField(
                        default=False,
                        verbose_name="Has the ticket been sent to the user",
                    ),
                ),
                (
                    "redeemed",
                    models.BooleanField(
                        default=False, verbose_name="Has the ticket been redeemed"
                    ),
                ),
                ("hash", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "payment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets",
                        to="payments.payment",
                    ),
                ),
                (
                    "ticket_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.tickettype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReminderOptIn",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="events.event"
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="partner.person"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EventPromotion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                ("name", models.CharField(max_length=256)),
                ("promotion_rate", models.FloatField(default=10.0)),
                ("expiry", models.DateField()),
                ("use_limit", models.IntegerField(default=100)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="events.event"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="event",
            name="category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="events.eventcategory",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="partner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="partner.partner"
            ),
        ),
    ]
