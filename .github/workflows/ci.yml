name: PR Checks
on: 
  pull_request:
    branches:
      - master
      - develop
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
  DEBUG: ${{ secrets.DEBUG }}
  POSTGRES_SERVER: ${{ secrets.POSTGRES_SERVER }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  BROKER_URL: ${{ secrets.BROKER_URL }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
  BASE_S3_URL: "https://ticketzone.s3.eu-central-1.amazonaws.com/"

jobs:
  Typing-Lint-Checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Setup poetry
        uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: 1.1.12

      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install --no-root

      - name: Run linting
        run: |
          chmod +x scripts/lint.sh
          poetry run ./scripts/lint.sh

      - name: Run System Checks
        run: poetry run ./manage.py check

  Unit-Tests-1:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

      redis:
        image: redis:6
        env:
          REDIS_HOST: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Setup poetry
        uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: 1.1.12

      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install wkhtmltopdf
          poetry install --no-root
      - name: Run Tests
        run: |
          poetry run ./manage.py test payments notifications owners tickets
  
  Unit-Tests-2:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

      redis:
        image: redis:6
        env:
          REDIS_HOST: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Setup poetry
        uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: 1.1.12

      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install wkhtmltopdf
          poetry install --no-root
      - name: Run Tests
        run: |
          poetry run ./manage.py test events
  
  Unit-Tests-3:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

      redis:
        image: redis:6
        env:
          REDIS_HOST: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Setup poetry
        uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: 1.1.12

      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install wkhtmltopdf
          poetry install --no-root
      - name: Run Tests
        run: |
          poetry run ./manage.py test partner
